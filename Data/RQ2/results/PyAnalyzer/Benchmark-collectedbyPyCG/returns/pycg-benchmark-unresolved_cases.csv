case,enre(all)&truth,enre(all),enre(resolved) & truth,enre(resolved),pycg & truth,pycg,truth,enre data(all),enre data(resolved),truth data,enre(resolved) - truth,truth - enre(resolved),pycg - truth,truth - pycg
builtins\map,2,3,2,4,2,2,6,"{('main', 'main.r'), ('main.func2', 'main.func'), ('main', 'builtins.map')}","{('main.func2', 'main.func'), ('main', 'builtins.map'), ('main', 'builtins.map.__next__'), ('main', 'builtins.map.__iter__')}","{('main', 'main.func3'), ('main', 'main.func3.func'), ('main', 'main.func2'), ('main.func2', 'main.func'), ('main', 'builtins.map'), ('main', 'main.func')}","{('main', 'builtins.map.__next__'), ('main', 'builtins.map.__iter__')}","{('main', 'main.func2'), ('main', 'main.func3'), ('main', 'main.func3.func'), ('main', 'main.func')}",set(),"{('main', 'main.func2'), ('main', 'main.func3'), ('main', 'main.func3.func'), ('main', 'main.func')}"
decorators\nested_decorators,4,7,3,3,5,5,6,"{('main.dec1.inner', 'main.dec1.f'), ('main.dec2.inner', 'main.dec2.f'), ('main', 'main.dec2'), ('main', 'main.dec1'), ('main', 'main.dec2.inner'), ('main', 'main.dec1.inner'), ('main', 'main.func')}","{('main', 'main.dec1'), ('main', 'main.func'), ('main', 'main.dec2')}","{('main', 'main.dec2'), ('main', 'main.dec1'), ('main.dec1.inner', 'main.dec2.inner'), ('main.dec2.inner', 'main.func'), ('main', 'main.dec1.inner'), ('main', 'main.func')}",set(),"{('main.dec2.inner', 'main.func'), ('main.dec1.inner', 'main.dec2.inner'), ('main', 'main.dec1.inner')}",set(),"{('main', 'main.dec1.inner')}"
decorators\return_different_func,2,5,2,3,3,4,4,"{('main.dec.inner', 'main.dec.f'), ('main', 'main.dec.inner'), ('main', 'main.dec'), ('main', 'main.func2'), ('main.func2', 'main.func')}","{('main', 'main.func2'), ('main.func2', 'main.func'), ('main', 'main.dec')}","{('main', 'main.func2'), ('main.func2', 'main.dec.inner'), ('main.dec.inner', 'main.func'), ('main', 'main.dec')}","{('main.func2', 'main.func')}","{('main.func2', 'main.dec.inner'), ('main.dec.inner', 'main.func')}","{('main.func2', 'main.func')}","{('main.func2', 'main.dec.inner')}"
dynamic\eval,0,1,0,1,0,1,2,"{('main', 'builtins.eval')}","{('main', 'builtins.eval')}","{('main.func', 'builtins.eval'), ('main', 'main.func')}","{('main', 'builtins.eval')}","{('main.func', 'builtins.eval'), ('main', 'main.func')}","{('main', 'builtins.eval')}","{('main.func', 'builtins.eval'), ('main', 'main.func')}"
external\attribute,0,2,0,0,1,1,2,"{('main', 'Cls'), ('main', 'fun')}",set(),"{('main', 'ext.Cls'), ('main', 'ext.Cls.fun')}",set(),"{('main', 'ext.Cls'), ('main', 'ext.Cls.fun')}",set(),"{('main', 'ext.Cls.fun')}"
external\attribute_assigned,1,3,1,1,2,2,3,"{('main.fn', 'main.fn.a'), ('main', 'Cls'), ('main', 'main.fn')}","{('main', 'main.fn')}","{('main.fn', 'ext.Cls.fun'), ('main', 'ext.Cls'), ('main', 'main.fn')}",set(),"{('main.fn', 'ext.Cls.fun'), ('main', 'ext.Cls')}",set(),"{('main.fn', 'ext.Cls.fun')}"
external\cls_parent,1,3,1,1,2,2,2,"{('main.A.fn', 'main.A.parent_fn'), ('main', 'main.A.fn'), ('main', 'main.A')}","{('main', 'main.A.fn')}","{('main', 'main.A.fn'), ('main.A.fn', 'ext.parent.parent_fn')}",set(),"{('main.A.fn', 'ext.parent.parent_fn')}",set(),set()
external\function,0,1,0,0,1,1,1,"{('main', 'function')}",set(),"{('main', 'ext.function')}",set(),"{('main', 'ext.function')}",set(),set()
external\function_asname,0,1,0,0,1,1,1,"{('main', 'main.fn')}",set(),"{('main', 'ext.function')}",set(),"{('main', 'ext.function')}",set(),set()
external\function_assigned,0,1,0,0,1,1,1,"{('main', 'main.a')}",set(),"{('main', 'ext.function')}",set(),"{('main', 'ext.function')}",set(),set()
generators\yield,1,2,1,1,2,2,2,"{('main', 'main.func1'), ('main', 'main.i')}","{('main', 'main.func1')}","{('main', 'main.func1'), ('main', 'main.func2')}",set(),"{('main', 'main.func2')}",set(),set()
imports\init_func_import,1,2,1,1,1,2,2,"{('main', 'nested.__init__.func'), ('main', 'nested.mod.func2')}","{('main', 'nested.mod.func2')}","{('main', 'nested.mod.func2'), ('main', 'nested.func')}",set(),"{('main', 'nested.func')}","{('main', 'mod.func2')}","{('main', 'nested.mod.func2')}"
kwargs\chained_call,3,5,3,3,4,4,4,"{('main', 'main.func1'), ('main.func2', 'main.func3'), ('main.func1', 'main.func1.a'), ('main.func1', 'main.func2'), ('main.func2', 'main.func2.a')}","{('main', 'main.func1'), ('main.func2', 'main.func3'), ('main.func1', 'main.func2')}","{('main', 'main.func1'), ('main.func2', 'main.func2'), ('main.func2', 'main.func3'), ('main.func1', 'main.func2')}",set(),"{('main.func2', 'main.func2')}",set(),set()
